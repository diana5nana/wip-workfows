name: Build

on: [push]

env:
  DOWNLOAD: ".download"
  UNPACKED: ".unpacked"
  
jobs:  
  build-bclinux:
    name: Build BCLinux
    runs-on: ubuntu-20.04
    timeout-minutes: 90
    env:
      KVER: "*"
    strategy:
      matrix:
        release: [
                { "name": "el7.8", "container": "el7.8" },
				        { "name": "el8.1", "container": "el8.1" },
        ]
    container:
      image: chinamobiles/bclinux7:latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set Download Environment
        env:
          RELEASE_NAME: ${{ matrix.release.name }}
        run: |
          case $RELEASE_NAME in
          el7.*)    OS_DIR1="os"
                    OS_DIR2=""
                    ;;
          el8*)    OS_DIR1="BaseOS"
                   OS_DIR2="os"
                   ;;
          esac
          MIRROR="mirrors.bclinux.org/bclinux" ;;
          OS_PATH="$MIRROR/$RELEASE_NAME/$OS_DIR1/x86_64/$OS_DIR2/Packages"
          UPDATE_PATH="$MIRROR/$RELEASE_NAME/updates/x86_64/$OS_DIR2/Packages"

          echo "OS_PATH=$OS_PATH" >> $GITHUB_ENV
          echo "UPDATE_PATH=$UPDATE_PATH" >> $GITHUB_ENV

      - name: Cache OS Kernel Header Packages
        uses: actions/cache@v2
        env:
          cache-name: cache-os-headers
        with:
          path: ${{ env.DOWNLOAD }}/${{ env.OS_PATH }}
          key: ${{ env.cache-name }}-bclinux-${{ matrix.release.name }}-v2

      - name: Cache Update Kernel Header Packages
        if: startsWith(matrix.release.name, 'el7')
        uses: actions/cache@v2
        env:
          cache-name: cache-update-headers
        with:
          path: ${{ env.DOWNLOAD }}/${{ env.UPDATE_PATH }}
          key: ${{ env.cache-name }}-bclinux-${{ matrix.release.name }}-v2

      - name: Install Dependencies
        run: yum -q -y install elfutils-libelf-devel gcc make wget ca-certificates

      - name: Filter latest BCLinux stream kernel
        if: startsWith(matrix.release.name, 'el8')
        run: |
          KVER=$(curl -s "http://mirrors.bclinux.org/bclinux/el8/BaseOS/x86_64/os/Packages/" | \
                 grep -o "kernel-devel-4.19.0-[0-9].[0-9].[0-9].[0-9].el8.bclinux.x86_64.rpm" | \
                 tail -n 1 | \
                 grep -o 4.19.0-[0-9].[0-9].[0-9].[0-9])
          echo $KVER
          echo "KVER=${KVER}*" >> $GITHUB_ENV

      - name: Download OS Kernel Header Packages
        uses: ./.github/actions/download
        with:
            output-path: ${{ env.DOWNLOAD }}
            url: "http://${{ env.OS_PATH }}"
            accept: "kernel-devel-${{ env.KVER }}.rpm"

      - name: Download Update Kernel Header Packages
        if: startsWith(matrix.release.name, 'el7')
        uses: ./.github/actions/download
        with:
            output-path: ${{ env.DOWNLOAD }}
            url: "http://${{ env.UPDATE_PATH }}"
            accept: "kernel-devel-${{ env.KVER }}.rpm"

      - name: Unpack Kernel Headers
        uses: ./.github/actions/unpack-rpm
        with:
            input-path: ${{ env.DOWNLOAD }}
            output-path: ${{ env.UNPACKED }}

      - name: Build
        uses: ./.github/actions/build
        with:
            search-path: "${{ env.UNPACKED }}/usr/src/kernels"